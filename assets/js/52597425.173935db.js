"use strict";(self.webpackChunkstarknet_devnet=self.webpackChunkstarknet_devnet||[]).push([[825],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=s(n),m=r,k=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return n?a.createElement(k,o(o({ref:t},c),{},{components:n})):a.createElement(k,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:18},o="Development",i={unversionedId:"guide/development",id:"guide/development",title:"Development",description:"If you're a developer willing to contribute, be sure to have installed Poetry and all the dependency packages by running the installation script. Prerequisites for running the script: gcc, g++, gmp, npm.",source:"@site/docs/guide/development.md",sourceDirName:"guide",slug:"/guide/development",permalink:"/starknet-devnet/docs/guide/development",draft:!1,editUrl:"https://github.com/Shard-Labs/starknet-devnet/blob/master/page/docs/guide/development.md",tags:[],version:"current",sidebarPosition:18,frontMatter:{sidebar_position:18},sidebar:"tutorialSidebar",previous:{title:"Devnet speed-up troubleshooting",permalink:"/starknet-devnet/docs/guide/devnet-speed-up"}},p={},s=[{value:"Development - Run",id:"development---run",level:2},{value:"Development - Run in debug mode",id:"development---run-in-debug-mode",level:2},{value:"Development - Format and Lint",id:"development---format-and-lint",level:2},{value:"Development - Test",id:"development---test",level:2},{value:"Development - Check versioning consistency",id:"development---check-versioning-consistency",level:2},{value:"Development - Working with an archive of cairo-lang",id:"development---working-with-an-archive-of-cairo-lang",level:2},{value:"Development - Updating accounts",id:"development---updating-accounts",level:2},{value:"Development - predeployment",id:"development---predeployment",level:2},{value:"Development - Build",id:"development---build",level:2},{value:"Development - Version release",id:"development---version-release",level:2}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"development"},"Development"),(0,r.kt)("p",null,"If you're a developer willing to contribute, be sure to have installed ",(0,r.kt)("a",{parentName:"p",href:"https://pypi.org/project/poetry/"},(0,r.kt)("strong",{parentName:"a"},"Poetry"))," and all the dependency packages by running the installation script. Prerequisites for running the script: ",(0,r.kt)("inlineCode",{parentName:"p"},"gcc"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"g++"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gmp"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"npm"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/install_dev_tools.sh\n")),(0,r.kt)("h2",{id:"development---run"},"Development - Run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"poetry run starknet-devnet\n")),(0,r.kt)("h2",{id:"development---run-in-debug-mode"},"Development - Run in debug mode"),(0,r.kt)("p",null,"This will restart Devnet on each code change:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"./scripts/starknet_devnet_debug.sh\n")),(0,r.kt)("h2",{id:"development---format-and-lint"},"Development - Format and Lint"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"./scripts/format.sh\n./scripts/lint.sh\n")),(0,r.kt)("h2",{id:"development---test"},"Development - Test"),(0,r.kt)("p",null,"When running tests locally, do it from the project root:"),(0,r.kt)("p",null,"First generate the artifacts:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/compile_contracts.sh\n")),(0,r.kt)("p",null,"Use one of the testing commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"./scripts/test.sh [TEST_CASE] # parallelized testing - using auto detected number of CPU cores\n\npoetry run pytest -s -v test/ # for more verbose output\n\npoetry run pytest test/<TEST_FILE> # for a single file\n\npoetry run pytest test/<TEST_FILE>::<TEST_CASE> # for a single test case\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"If you are experiencing test failures on macOS related to ",(0,r.kt)("inlineCode",{parentName:"p"},"fork()")," command\nconsider running ",(0,r.kt)("inlineCode",{parentName:"p"},"export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES")," in your shell.")),(0,r.kt)("h2",{id:"development---check-versioning-consistency"},"Development - Check versioning consistency"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"./scripts/check_versions.sh\n")),(0,r.kt)("h2",{id:"development---working-with-an-archive-of-cairo-lang"},"Development - Working with an archive of cairo-lang"),(0,r.kt)("p",null,"If you know the URL of the archive (e.g. ZIP) of a new cairo-lang version, you can install it with"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"poetry add <URL>\n")),(0,r.kt)("p",null,"After adding a new cairo-lang version, you will probably want to recompile contract artifacts."),(0,r.kt)("h2",{id:"development---updating-accounts"},"Development - Updating accounts"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set up ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/cairo-contracts/"},"https://github.com/OpenZeppelin/cairo-contracts/")," locally"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"git clone ... && pip install cairo-nile && nile init")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"git checkout")," to desired version")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"nile compile --directory src"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Copy and minify ",(0,r.kt)("inlineCode",{parentName:"p"},"artifacts/Account.json")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"artifacts/abi/Account.json"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update the precalculated hash"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Predeployed account addresses should be intact"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update directory/file names containing the version")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Adapt to ABI changes")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update expected test paths and addresses")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Update docs"))),(0,r.kt)("h2",{id:"development---predeployment"},"Development - predeployment"),(0,r.kt)("p",null,"Several things are preconfigured on startup to be available on the first user interaction with Devnet. This is done in the ",(0,r.kt)("inlineCode",{parentName:"p"},"initialize")," method of ",(0,r.kt)("inlineCode",{parentName:"p"},"StarknetWrapper"),". The following is currently executed:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Deployment of",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Fee token contract"),(0,r.kt)("li",{parentName:"ul"},"User accounts"),(0,r.kt)("li",{parentName:"ul"},"Chargeable account",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"for e.g. signing minting txs"))),(0,r.kt)("li",{parentName:"ul"},"UDC",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"supports contract deployment ever since deploy txs have been deprecated"))))),(0,r.kt)("li",{parentName:"ul"},"Declaration of the account class used by Starknet CLI")),(0,r.kt)("h2",{id:"development---build"},"Development - Build"),(0,r.kt)("p",null,"You don't need to build anything to be able to run locally, but if you need the ",(0,r.kt)("inlineCode",{parentName:"p"},"*.whl")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"*.tar.gz")," artifacts, run"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-text"},"poetry build\n")),(0,r.kt)("h2",{id:"development---version-release"},"Development - Version release"),(0,r.kt)("p",null,"You can check the current version on master with these commands:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"git checkout master\npoetry version\n")),(0,r.kt)("p",null,"To update the version use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"poetry version <VERSION>\n")),(0,r.kt)("p",null,"or any other variation of that ",(0,r.kt)("a",{parentName:"p",href:"https://python-poetry.org/docs/cli/#version"},"command")),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"starknet_devnet/__init__.py")," you need to manually update the version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'__version__ = "<VERSION>"\n')),(0,r.kt)("p",null,"If you did everything correctly, these commands should result in the same version:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"poetry version\npoetry run starknet-devnet --version\n")),(0,r.kt)("p",null,"Commit and tag (Notice the ",(0,r.kt)("inlineCode",{parentName:"p"},"v"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'git add starknet_devnet/__init__.py pyproject.toml\ngit commit -m "Bump version to v<VERSION>"\ngit tag v<VERSION>\ngit push origin v<VERSION>\n')),(0,r.kt)("p",null,"Documentation is deployed automatically to ",(0,r.kt)("a",{parentName:"p",href:"https://shard-labs.github.io/starknet-devnet"},"https://shard-labs.github.io/starknet-devnet"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Uses the FabijanC username and its private GitHub token set in the CircleCI project env vars."),(0,r.kt)("li",{parentName:"ul"},"Done only after a new version is released."),(0,r.kt)("li",{parentName:"ul"},"Initiated in ",(0,r.kt)("inlineCode",{parentName:"li"},"scripts/package_build_and_publish.sh"),".")),(0,r.kt)("p",null,"Lastly:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Check if tests and version/image publishing ran successfully on CI"),(0,r.kt)("li",{parentName:"ul"},"Generate release notes with the corresponding tag version on GitHub"),(0,r.kt)("li",{parentName:"ul"},"Inform users on Telegram, ",(0,r.kt)("a",{parentName:"li",href:"https://discord.com/channels/793094838509764618/985824027950055434"},"Discord Devnet channel"),", and ",(0,r.kt)("a",{parentName:"li",href:"https://community.starknet.io/t/starknet-devnet/69"},"StarkNet Shamans"),".")))}d.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkstarknet_devnet=self.webpackChunkstarknet_devnet||[]).push([[639],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,c(c({ref:t},p),{},{components:n})):a.createElement(f,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return a.createElement.apply(null,c)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3855:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:13},c="Predeployed accounts",i={unversionedId:"guide/Predeployed-accounts",id:"guide/Predeployed-accounts",title:"Predeployed accounts",description:"Devnet predeploys --accounts with some --initial-balance. The accounts get charged for transactions according to the --gas-price. A --seed can be used to regenerate the same set of accounts. Read more about it in the Run section.",source:"@site/docs/guide/Predeployed-accounts.md",sourceDirName:"guide",slug:"/guide/Predeployed-accounts",permalink:"/starknet-devnet/docs/guide/Predeployed-accounts",draft:!1,editUrl:"https://github.com/Shard-Labs/starknet-devnet/docs/guide/Predeployed-accounts.md",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13},sidebar:"tutorialSidebar",previous:{title:"Contract debugging",permalink:"/starknet-devnet/docs/guide/contract-debugging"},next:{title:"Mint token - Local faucet",permalink:"/starknet-devnet/docs/guide/mint-token"}},l={},s=[{value:"Fetch predeployed accounts",id:"fetch-predeployed-accounts",level:2},{value:"Fetch account balance",id:"fetch-account-balance",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"predeployed-accounts"},"Predeployed accounts"),(0,r.kt)("p",null,"Devnet predeploys ",(0,r.kt)("inlineCode",{parentName:"p"},"--accounts")," with some ",(0,r.kt)("inlineCode",{parentName:"p"},"--initial-balance"),". The accounts get charged for transactions according to the ",(0,r.kt)("inlineCode",{parentName:"p"},"--gas-price"),". A ",(0,r.kt)("inlineCode",{parentName:"p"},"--seed")," can be used to regenerate the same set of accounts. Read more about it in the ",(0,r.kt)("a",{parentName:"p",href:"#run"},"Run section"),"."),(0,r.kt)("p",null,"To get the code of the account (currently fork of OpenZeppelin's ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenZeppelin/cairo-contracts/releases/tag/v0.4.0b"},"v0.4.0b"),"), use one of the following:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"GET /get_code?contractAddress=<ACCOUNT_ADDRESS>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.cairo-lang.org/docs/hello_starknet/cli.html#get-code"},"Starknet CLI"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"starknet get_code --contract_address <ACCOUNT_ADDRESS> --feeder_gateway_url <DEVNET_URL>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Shard-Labs/cairo-contracts/tree/fix-account-query-version"},"GitHub repository"))),(0,r.kt)("p",null,"You can use the accounts in e.g. ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Shard-Labs/starknet-hardhat-plugin"},(0,r.kt)("strong",{parentName:"a"},"starknet-hardhat-plugin"))," via:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'const account = await starknet.getAccountFromAddress(\n  ADDRESS,\n  PRIVATE_KEY,\n  "OpenZeppelin"\n);\n')),(0,r.kt)("h2",{id:"fetch-predeployed-accounts"},"Fetch predeployed accounts"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /predeployed_accounts\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'[\n  {\n    "initial_balance": 1e+21,\n    "address": "0x7c3e2...",\n    "private_key": "0x6160...",\n    "public_key": "0x6a5540..."\n  },\n  ...\n]\n')),(0,r.kt)("h2",{id:"fetch-account-balance"},"Fetch account balance"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"GET /account_balance?address=<HEX_ADDRESS>\n")),(0,r.kt)("p",null,"Response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'{\n  "amount": 123...456,\n  "unit": "wei"\n}\n\n## Mint token - Local faucet\n\nOther than using prefunded predeployed accounts, you can also add funds to an account that you deployed yourself.\n\nThe ERC20 contract used for minting ETH tokens and charging fees is at: `0x62230ea046a9a5fbc261ac77d03c8d41e5d442db2284587570ab46455fd2488`\n\n### Query fee token address\n\n')),(0,r.kt)("p",null,"GET /fee_token"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nResponse:\n\n")),(0,r.kt)("p",null,'{\n"symbol":"ETH",\n"address":"0x62230ea046a9a5fbc261ac77d03c8d41e5d442db2284587570ab46455fd2488",\n}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n### Mint with a transaction\n\nBy not setting the `lite` parameter or by setting it to `false`, new tokens will be minted in a separate transaction. You will receive the hash of this transaction, as well as the new balance after minting in the response.\n\n`amount` needs to be an integer (or a float whose fractional part is 0, e.g. `1000.0` or `1e21`)\n\n")),(0,r.kt)("p",null,'POST /mint\n{\n"address": "0x6e3205f...",\n"amount": 500000\n}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nResponse:\n\n")),(0,r.kt)("p",null,'{\n"new_balance": 500000,\n"unit": "wei",\n"tx_hash": "0xa24f23..."\n}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\n### Mint lite\n\nBy setting the `lite` parameter, new tokens will be minted without generating a transaction, thus executing faster.\n\n")),(0,r.kt)("p",null,'POST /mint\n{\n"address": "0x6e3205f...",\n"amount": 500000,\n"lite": true\n}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nResponse:\n\n")),(0,r.kt)("p",null,'{\n"new_balance": 500000,\n"unit": "wei",\n"tx_hash": null\n}'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"")))}u.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkstarknet_devnet=self.webpackChunkstarknet_devnet||[]).push([[398],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>u});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=s(n),u=a,k=b["".concat(i,".").concat(u)]||b[u]||d[u]||o;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=b;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},558:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:8},l="Blocks",c={unversionedId:"guide/blocks",id:"guide/blocks",title:"Blocks",description:'Devnet starts with a genesis block (with block number equal to 0 and block hash equal to "0x0").',source:"@site/docs/guide/blocks.md",sourceDirName:"guide",slug:"/guide/blocks",permalink:"/starknet-devnet/docs/guide/blocks",draft:!1,editUrl:"https://github.com/Shard-Labs/starknet-devnet/blob/master/page/docs/guide/blocks.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Block explorer",permalink:"/starknet-devnet/docs/guide/block-explorer"},next:{title:"Lite mode",permalink:"/starknet-devnet/docs/guide/lite-mode"}},i={},s=[{value:"Create an empty block",id:"create-an-empty-block",level:3},{value:"Create a block on demand",id:"create-a-block-on-demand",level:3}],p={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"blocks"},"Blocks"),(0,a.kt)("p",null,"Devnet starts with a genesis block (with block number equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," and block hash equal to ",(0,a.kt)("inlineCode",{parentName:"p"},'"0x0"'),")."),(0,a.kt)("p",null,"A new block is generated with each new transaction unless you opt for ",(0,a.kt)("a",{parentName:"p",href:"#create-a-block-on-demand"},"creating blocks on demand"),"."),(0,a.kt)("h3",{id:"create-an-empty-block"},"Create an empty block"),(0,a.kt)("p",null,"To create an empty block without transactions, ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," a request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/create_block"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"POST /create_block\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n    "transactions": [],\n    "parent_block_hash": "0x0",\n    "timestamp": 1659457385,\n    "state_root": "004bee3ee...",\n    "gas_price": "0x174876e800",\n    "sequencer_address": "0x4bbfb0d1aa...",\n    "transaction_receipts": [],\n    "starknet_version": "0.9.1",\n    "block_hash": "0x1",\n    "block_number": 1,\n    "status": "ACCEPTED_ON_L2"\n}\n')),(0,a.kt)("h3",{id:"create-a-block-on-demand"},"Create a block on demand"),(0,a.kt)("p",null,"If you start Devnet with ",(0,a.kt)("inlineCode",{parentName:"p"},"--blocks-on-demand")," CLI option, all transactions will be pending and stored in a pending block (targetable via block ID ",(0,a.kt)("inlineCode",{parentName:"p"},'"pending"'),").\nTo create a block on demand, send a ",(0,a.kt)("inlineCode",{parentName:"p"},"POST")," request to ",(0,a.kt)("inlineCode",{parentName:"p"},"/create_block_on_demand"),". This will convert the pending block to the latest block (targetable via block ID ",(0,a.kt)("inlineCode",{parentName:"p"},'"latest"'),"), giving it a block hash and a block number. All subsequent transactions will be stored to a new pending block."),(0,a.kt)("p",null,"In case of demanding block creation with no pending transactions, a new empty block will be generated."),(0,a.kt)("p",null,"The creation of the genesis block is not affected by this feature."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"POST /create_block_on_demand\n")),(0,a.kt)("p",null,"Response:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{'block_hash': '0x115e1b390cafa7942b6ab141ab85040defe7dee9bef3bc31d8b5b3d01cc9c67'}\n")))}d.isMDXComponent=!0}}]);